class Category:
    def __init__(self, category):
        self.category = category
        self.ledger = []

    def deposit(self, amount, description=""):
        self.ledger.append({"amount": amount, "description": description})

    def withdraw(self, amount, description=""):
        if self.check_funds(amount):
            self.ledger.append({"amount": -amount, "description": description})
            return True
        return False

    def get_balance(self):
        return sum(item["amount"] for item in self.ledger)

    def transfer(self, amount, budget_category):
        if self.check_funds(amount):
            self.withdraw(amount, f"Transfer to {budget_category.category}")
            budget_category.deposit(amount, f"Transfer from {self.category}")
            return True
        return False

    def check_funds(self, amount):
        return amount <= self.get_balance()

    def __str__(self):
        output = self.category.center(30, "*") + "\n"
        for item in self.ledger:
            description = item["description"][:23]
            amount = format(item["amount"], ".2f")
            output += f"{description:<23}{amount:>7}\n"
        output += f"Total: {self.get_balance():.2f}"
        return output


def create_spend_chart(categories):
    category_names = [category.category for category in categories]
    spendings = [sum(item["amount"] for item in category.ledger if item["amount"] < 0) for category in categories]
    total_spent = sum(spendings)
    percentages = [int(spending / total_spent * 100) if total_spent > 0 else 0 for spending in spendings]

    chart = "Percentage spent by category\n"
    for percentage in range(100, -1, -10):
        chart += str(percentage).rjust(3) + "| "
        for p in percentages:
            chart += "o" if p >= percentage else " "
            chart += "  "
        chart += "\n"

    chart += "    ----------\n     "
    longest_category_name_length = max(len(name) for name in category_names)
    for i in range(longest_category_name_length):
        for name in category_names:
            if i < len(name):
                chart += name[i] + "  "
            else:
                chart += "   "
        chart += "\n"

    return chart.rstrip()

# Test cases
food = Category("Food")
entertainment = Category("Entertainment")
business = Category("Business")

food.deposit(1000, "initial deposit")
entertainment.deposit(1000, "initial deposit")
business.deposit(1000, "initial deposit")

food.withdraw(10.15, "groceries")
entertainment.withdraw(15.89, "restaurant and more foo")
business.withdraw(50, "Transfer to Clothing")

print(food)
print(entertainment)
print(business)

print(create_spend_chart([food, entertainment, business]))
